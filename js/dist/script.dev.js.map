{"version":3,"sources":["script.js"],"names":["w","h","ctx","canvas","getContext","sin","Math","cos","PI","hypot","min","max","spawn","pts","many","x","rnd","innerWidth","y","innerHeight","len","r","pts2","i","seed","tx","ty","kx","ky","walkRadius","pt","paintPt","forEach","pt2","drawLine","lerp","drawCircle","follow","tick","t","selfMoveX","selfMoveY","fx","fy","dx","dy","increasing","dir","spiders","addEventListener","e","spider","clientX","clientY","requestAnimationFrame","anim","width","height","fillStyle","strokeStyle","recalc","X","Y","random","color","beginPath","ellipse","fill","x0","y0","x1","y1","moveTo","k","noise","lineTo","stroke","n","f","Array","map","_","a","b","w0","w1"],"mappings":";;;;;;;;;;AAAA,IAAIA,CAAJ,EAAOC,CAAP;AACA,IAAMC,GAAG,GAAGC,MAAM,CAACC,UAAP,CAAkB,IAAlB,CAAZ;IACQC,G,GAAkCC,I,CAAlCD,G;IAAKE,G,GAA6BD,I,CAA7BC,G;IAAKC,E,GAAwBF,I,CAAxBE,E;IAAIC,K,GAAoBH,I,CAApBG,K;IAAOC,G,GAAaJ,I,CAAbI,G;IAAKC,G,GAAQL,I,CAARK,G;;AAIlC,SAASC,KAAT,GAAiB;AAEb,MAAMC,GAAG,GAAGC,IAAI,CAAC,GAAD,EAAM,YAAM;AACxB,WAAO;AACHC,MAAAA,CAAC,EAAEC,GAAG,CAACC,UAAD,CADH;AAEHC,MAAAA,CAAC,EAAEF,GAAG,CAACG,WAAD,CAFH;AAGHC,MAAAA,GAAG,EAAE,CAHF;AAIHC,MAAAA,CAAC,EAAE;AAJA,KAAP;AAMH,GAPe,CAAhB;AASA,MAAMC,IAAI,GAAGR,IAAI,CAAC,CAAD,EAAI,UAACS,CAAD,EAAO;AACxB,WAAO;AACHR,MAAAA,CAAC,EAAER,GAAG,CAAEgB,CAAC,GAAG,CAAL,GAAUf,EAAV,GAAe,CAAhB,CADH;AAEHU,MAAAA,CAAC,EAAEb,GAAG,CAAEkB,CAAC,GAAG,CAAL,GAAUf,EAAV,GAAe,CAAhB;AAFH,KAAP;AAIH,GALgB,CAAjB;AAOA,MAAIgB,IAAI,GAAGR,GAAG,CAAC,GAAD,CAAd;AACA,MAAIS,EAAE,GAAGT,GAAG,CAACC,UAAD,CAAZ;AACA,MAAIS,EAAE,GAAGV,GAAG,CAACG,WAAD,CAAZ;AACA,MAAIJ,CAAC,GAAGC,GAAG,CAACC,UAAD,CAAX;AACA,MAAIC,CAAC,GAAGF,GAAG,CAACG,WAAD,CAAX;AACA,MAAIQ,EAAE,GAAGX,GAAG,CAAC,GAAD,EAAM,GAAN,CAAZ;AACA,MAAIY,EAAE,GAAGZ,GAAG,CAAC,GAAD,EAAM,GAAN,CAAZ;AACA,MAAIa,UAAU,GAAGC,EAAE,CAACd,GAAG,CAAC,EAAD,EAAI,EAAJ,CAAJ,EAAaA,GAAG,CAAC,EAAD,EAAI,EAAJ,CAAhB,CAAnB;AACD,MAAIK,CAAC,GAAGJ,UAAU,GAAGD,GAAG,CAAC,GAAD,EAAM,GAAN,CAAxB;;AAEC,WAASe,OAAT,CAAiBD,EAAjB,EAAoB;AAChBR,IAAAA,IAAI,CAACU,OAAL,CAAa,UAACC,GAAD,EAAS;AAClB,UAAI,CAACH,EAAE,CAACV,GAAR,EACI;AACJc,MAAAA,QAAQ,CACJC,IAAI,CAACpB,CAAC,GAAGkB,GAAG,CAAClB,CAAJ,GAAQM,CAAb,EAAgBS,EAAE,CAACf,CAAnB,EAAsBe,EAAE,CAACV,GAAH,GAASU,EAAE,CAACV,GAAlC,CADA,EAEJe,IAAI,CAACjB,CAAC,GAAGe,GAAG,CAACf,CAAJ,GAAQG,CAAb,EAAgBS,EAAE,CAACZ,CAAnB,EAAsBY,EAAE,CAACV,GAAH,GAASU,EAAE,CAACV,GAAlC,CAFA,EAGJL,CAAC,GAAGkB,GAAG,CAAClB,CAAJ,GAAQM,CAHR,EAIJH,CAAC,GAAGe,GAAG,CAACf,CAAJ,GAAQG,CAJR,CAAR;AAMH,KATD;AAUAe,IAAAA,UAAU,CAACN,EAAE,CAACf,CAAJ,EAAOe,EAAE,CAACZ,CAAV,EAAaY,EAAE,CAACT,CAAhB,CAAV;AACH;;AAED,SAAO;AACHgB,IAAAA,MADG,kBACItB,CADJ,EACMG,CADN,EACS;AACRO,MAAAA,EAAE,GAAGV,CAAL;AACAW,MAAAA,EAAE,GAAGR,CAAL;AACH,KAJE;AAMHoB,IAAAA,IANG,gBAMEC,CANF,EAMK;AAEZ,UAAMC,SAAS,GAAGjC,GAAG,CAACgC,CAAC,GAACZ,EAAF,GAAKH,IAAN,CAAH,GAAeK,UAAU,CAACd,CAA5C;AACA,UAAM0B,SAAS,GAAGpC,GAAG,CAACkC,CAAC,GAACX,EAAF,GAAKJ,IAAN,CAAH,GAAeK,UAAU,CAACX,CAA5C;AACA,UAAIwB,EAAE,GAAGjB,EAAE,GAAGe,SAAd;AACA,UAAIG,EAAE,GAAGjB,EAAE,GAAGe,SAAd;AAEA1B,MAAAA,CAAC,IAAIL,GAAG,CAACO,UAAU,GAAC,GAAZ,EAAiB,CAACyB,EAAE,GAAG3B,CAAN,IAAS,EAA1B,CAAR;AACAG,MAAAA,CAAC,IAAIR,GAAG,CAACO,UAAU,GAAC,GAAZ,EAAiB,CAAC0B,EAAE,GAAGzB,CAAN,IAAS,EAA1B,CAAR;AAEA,UAAIK,CAAC,GAAG,CAAR;AACAV,MAAAA,GAAG,CAACmB,OAAJ,CAAY,UAACF,EAAD,EAAQ;AAChB,YAAMc,EAAE,GAAGd,EAAE,CAACf,CAAH,GAAOA,CAAlB;AAAA,YACI8B,EAAE,GAAGf,EAAE,CAACZ,CAAH,GAAOA,CADhB;AAEA,YAAME,GAAG,GAAGX,KAAK,CAACmC,EAAD,EAAKC,EAAL,CAAjB;AACA,YAAIxB,CAAC,GAAGX,GAAG,CAAC,CAAD,EAAIO,UAAU,GAAGG,GAAb,GAAmB,CAAvB,CAAX;AACAU,QAAAA,EAAE,CAACS,CAAH,GAAO,CAAP;AACA,YAAMO,UAAU,GAAG1B,GAAG,GAAGH,UAAU,GAAG,EAAnB,IACXM,CAAC,EAAF,GAAQ,CADf;AAEA,YAAIwB,GAAG,GAAGD,UAAU,GAAG,GAAH,GAAS,CAAC,GAA9B;;AACA,YAAIA,UAAJ,EAAgB;AACZzB,UAAAA,CAAC,IAAI,GAAL;AACH;;AACDS,QAAAA,EAAE,CAACT,CAAH,GAAOA,CAAP;AACAS,QAAAA,EAAE,CAACV,GAAH,GAAST,GAAG,CAAC,CAAD,EAAID,GAAG,CAACoB,EAAE,CAACV,GAAH,GAAS2B,GAAV,EAAe,CAAf,CAAP,CAAZ;AACAhB,QAAAA,OAAO,CAACD,EAAD,CAAP;AACH,OAfD;AAmBK;AApCE,GAAP;AAsCH;;AAED,IAAMkB,OAAO,GAAGlC,IAAI,CAAC,CAAD,EAAIF,KAAJ,CAApB;AAEAqC,gBAAgB,CAAC,aAAD,EAAgB,UAACC,CAAD,EAAO;AACnCF,EAAAA,OAAO,CAAChB,OAAR,CAAgB,UAAAmB,MAAM,EAAI;AACtBA,IAAAA,MAAM,CAACd,MAAP,CAAca,CAAC,CAACE,OAAhB,EAAyBF,CAAC,CAACG,OAA3B;AACH,GAFD;AAGH,CAJe,CAAhB;AAMAC,qBAAqB,CAAC,SAASC,IAAT,CAAchB,CAAd,EAAiB;AACnC,MAAIvC,CAAC,KAAKiB,UAAV,EAAsBjB,CAAC,GAAGG,MAAM,CAACqD,KAAP,GAAevC,UAAnB;AACtB,MAAIhB,CAAC,KAAKkB,WAAV,EAAuBlB,CAAC,GAAGE,MAAM,CAACsD,MAAP,GAAgBtC,WAApB;AACvBjB,EAAAA,GAAG,CAACwD,SAAJ,GAAgB,MAAhB;AACAtB,EAAAA,UAAU,CAAC,CAAD,EAAI,CAAJ,EAAOpC,CAAC,GAAG,EAAX,CAAV;AACAE,EAAAA,GAAG,CAACwD,SAAJ,GAAgBxD,GAAG,CAACyD,WAAJ,GAAkB,MAAlC;AACApB,EAAAA,CAAC,IAAE,IAAH;AACAS,EAAAA,OAAO,CAAChB,OAAR,CAAgB,UAAAmB,MAAM;AAAA,WAAIA,MAAM,CAACb,IAAP,CAAYC,CAAZ,CAAJ;AAAA,GAAtB;AACAe,EAAAA,qBAAqB,CAACC,IAAD,CAArB;AACH,CAToB,CAArB;;AAWA,SAASK,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAClBrC,EAAAA,EAAE,GAAGoC,CAAL;AACAnC,EAAAA,EAAE,GAAGoC,CAAL;AACH;;AAED,SAAS9C,GAAT,GAA4B;AAAA,MAAfD,CAAe,uEAAX,CAAW;AAAA,MAAR6B,EAAQ,uEAAH,CAAG;AACxB,SAAOtC,IAAI,CAACyD,MAAL,KAAgBhD,CAAhB,GAAoB6B,EAA3B;AACH;;AAED,SAASR,UAAT,CAAoBrB,CAApB,EAAuBG,CAAvB,EAA0BG,CAA1B,EAA6B2C,KAA7B,EAAoC;AAChC;AACA;AACA9D,EAAAA,GAAG,CAAC+D,SAAJ;AACA/D,EAAAA,GAAG,CAACgE,OAAJ,CAAYnD,CAAZ,EAAeG,CAAf,EAAkBG,CAAlB,EAAqBA,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8Bb,EAAE,GAAG,CAAnC;AACAN,EAAAA,GAAG,CAACiE,IAAJ;AACH;;AAED,SAASjC,QAAT,CAAkBkC,EAAlB,EAAsBC,EAAtB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkC;AAC9BrE,EAAAA,GAAG,CAAC+D,SAAJ;AACA/D,EAAAA,GAAG,CAACsE,MAAJ,CAAWJ,EAAX,EAAeC,EAAf;AAEAvD,EAAAA,IAAI,CAAC,GAAD,EAAM,UAACS,CAAD,EAAO;AACbA,IAAAA,CAAC,GAAG,CAACA,CAAC,GAAG,CAAL,IAAU,GAAd;AACA,QAAIR,CAAC,GAAGoB,IAAI,CAACiC,EAAD,EAAKE,EAAL,EAAS/C,CAAT,CAAZ;AACA,QAAIL,CAAC,GAAGiB,IAAI,CAACkC,EAAD,EAAKE,EAAL,EAAShD,CAAT,CAAZ;AACA,QAAIkD,CAAC,GAAGC,KAAK,CAAC3D,CAAC,GAAC,CAAF,GAAIqD,EAAL,EAASlD,CAAC,GAAC,CAAF,GAAImD,EAAb,CAAL,GAAwB,CAAhC;AACAnE,IAAAA,GAAG,CAACyE,MAAJ,CAAW5D,CAAC,GAAG0D,CAAf,EAAkBvD,CAAC,GAAGuD,CAAtB;AACH,GANG,CAAJ;AAQAvE,EAAAA,GAAG,CAAC0E,MAAJ;AACH;;AAED,SAAS9D,IAAT,CAAc+D,CAAd,EAAiBC,CAAjB,EAAoB;AAChB,SAAO,mBAAIC,KAAK,CAACF,CAAD,CAAT,EAAcG,GAAd,CAAkB,UAACC,CAAD,EAAI1D,CAAJ;AAAA,WAAUuD,CAAC,CAACvD,CAAD,CAAX;AAAA,GAAlB,CAAP;AACH;;AAED,SAASY,IAAT,CAAc+C,CAAd,EAAiBC,CAAjB,EAAoB5C,CAApB,EAAuB;AACnB,SAAO2C,CAAC,GAAG,CAACC,CAAC,GAAGD,CAAL,IAAU3C,CAArB;AACH;;AAED,SAASmC,KAAT,CAAe3D,CAAf,EAAkBG,CAAlB,EAA8B;AAAA,MAATqB,CAAS,uEAAL,GAAK;AAC1B,MAAI6C,EAAE,GAAG/E,GAAG,CAAC,MAAMU,CAAN,GAAU,MAAMwB,CAAhB,GAAoB,GAApB,GACA,MAAMlC,GAAG,CAAC,MAAMa,CAAN,GAAU,CAAC,GAAD,GAAOqB,CAAjB,GAAqB,GAAtB,CADV,CAAZ;AAEA,MAAI8C,EAAE,GAAGhF,GAAG,CAAC,MAAMa,CAAN,GAAU,MAAMqB,CAAhB,GAAoB,GAApB,GACA,MAAMlC,GAAG,CAAC,MAAMU,CAAN,GAAU,CAAC,GAAD,GAAOwB,CAAjB,GAAqB,GAAtB,CADV,CAAZ;AAEA,SAAO6C,EAAE,GAAGC,EAAZ;AACH;;AAED,SAASvD,EAAT,CAAYf,CAAZ,EAAcG,CAAd,EAAgB;AACZ,SAAO;AAACH,IAAAA,CAAC,EAADA,CAAD;AAAGG,IAAAA,CAAC,EAADA;AAAH,GAAP;AACH","sourcesContent":["let w, h;\r\nconst ctx = canvas.getContext(\"2d\");\r\nconst { sin, cos, PI, hypot, min, max } = Math;\r\n\r\n\r\n\r\nfunction spawn() {\r\n    \r\n    const pts = many(333, () => {\r\n        return {\r\n            x: rnd(innerWidth),\r\n            y: rnd(innerHeight),\r\n            len: 0,\r\n            r: 0\r\n        };\r\n    });\r\n    \r\n    const pts2 = many(9, (i) => {\r\n        return {\r\n            x: cos((i / 9) * PI * 2),\r\n            y: sin((i / 9) * PI * 2)\r\n        };\r\n    });\r\n    \r\n    let seed = rnd(100)\r\n    let tx = rnd(innerWidth); \r\n    let ty = rnd(innerHeight);\r\n    let x = rnd(innerWidth)\r\n    let y = rnd(innerHeight)\r\n    let kx = rnd(0.5, 0.5)\r\n    let ky = rnd(0.5, 0.5)\r\n    let walkRadius = pt(rnd(50,50), rnd(50,50))\r\n   let r = innerWidth / rnd(100, 150);\r\n    \r\n    function paintPt(pt){\r\n        pts2.forEach((pt2) => {\r\n            if (!pt.len )\r\n                return\r\n            drawLine(\r\n                lerp(x + pt2.x * r, pt.x, pt.len * pt.len),\r\n                lerp(y + pt2.y * r, pt.y, pt.len * pt.len),\r\n                x + pt2.x * r,\r\n                y + pt2.y * r\r\n            );\r\n        });\r\n        drawCircle(pt.x, pt.y, pt.r);\r\n    }\r\n  \r\n    return {\r\n        follow(x,y) {\r\n            tx = x;\r\n            ty = y;\r\n        },\r\n        \r\n        tick(t) {\r\n        \r\n    const selfMoveX = cos(t*kx+seed)*walkRadius.x        \r\n    const selfMoveY = sin(t*ky+seed)*walkRadius.y      \r\n    let fx = tx + selfMoveX;         \r\n    let fy = ty + selfMoveY; \r\n            \r\n    x += min(innerWidth/100, (fx - x)/10)\r\n    y += min(innerWidth/100, (fy - y)/10)\r\n            \r\n    let i = 0\r\n    pts.forEach((pt) => {\r\n        const dx = pt.x - x,\r\n            dy = pt.y - y;\r\n        const len = hypot(dx, dy);\r\n        let r = min(2, innerWidth / len / 5);\r\n        pt.t = 0;\r\n        const increasing = len < innerWidth / 10 \r\n            && (i++) < 8;\r\n        let dir = increasing ? 0.1 : -0.1;\r\n        if (increasing) {\r\n            r *= 1.5;\r\n        }\r\n        pt.r = r;\r\n        pt.len = max(0, min(pt.len + dir, 1));\r\n        paintPt(pt)\r\n    });\r\n\r\n            \r\n                   \r\n        } \r\n    }\r\n}\r\n\r\nconst spiders = many(2, spawn)\r\n\r\naddEventListener(\"pointermove\", (e) => {\r\n    spiders.forEach(spider => {\r\n        spider.follow(e.clientX, e.clientY)\r\n    })\r\n});\r\n\r\nrequestAnimationFrame(function anim(t) {\r\n    if (w !== innerWidth) w = canvas.width = innerWidth;\r\n    if (h !== innerHeight) h = canvas.height = innerHeight;\r\n    ctx.fillStyle = \"#000\";\r\n    drawCircle(0, 0, w * 10);\r\n    ctx.fillStyle = ctx.strokeStyle = \"#fff\";\r\n    t/=1000\r\n    spiders.forEach(spider => spider.tick(t))\r\n    requestAnimationFrame(anim);\r\n});\r\n\r\nfunction recalc(X, Y) {\r\n    tx = X;\r\n    ty = Y;\r\n}\r\n\r\nfunction rnd(x = 1, dx = 0) {\r\n    return Math.random() * x + dx;\r\n}\r\n\r\nfunction drawCircle(x, y, r, color) {\r\n    //console.log(x,y,r)\r\n    // ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.ellipse(x, y, r, r, 0, 0, PI * 2);\r\n    ctx.fill();\r\n}\r\n\r\nfunction drawLine(x0, y0, x1, y1) {\r\n    ctx.beginPath();\r\n    ctx.moveTo(x0, y0);\r\n\r\n    many(100, (i) => {\r\n        i = (i + 1) / 100;\r\n        let x = lerp(x0, x1, i);\r\n        let y = lerp(y0, y1, i);\r\n        let k = noise(x/5+x0, y/5+y0) * 2;\r\n        ctx.lineTo(x + k, y + k);\r\n    });\r\n\r\n    ctx.stroke();\r\n}\r\n\r\nfunction many(n, f) {\r\n    return [...Array(n)].map((_, i) => f(i));\r\n}\r\n\r\nfunction lerp(a, b, t) {\r\n    return a + (b - a) * t;\r\n}\r\n\r\nfunction noise(x, y, t = 101) {\r\n    let w0 = sin(0.3 * x + 1.4 * t + 2.0 + \r\n                 2.5 * sin(0.4 * y + -1.3 * t + 1.0));\r\n    let w1 = sin(0.2 * y + 1.5 * t + 2.8 + \r\n                 2.3 * sin(0.5 * x + -1.2 * t + 0.5));\r\n    return w0 + w1;\r\n}\r\n\r\nfunction pt(x,y){\r\n    return {x,y}\r\n}"],"file":"script.dev.js"}